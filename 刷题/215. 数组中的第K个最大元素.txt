方法一：
排序
方法二：
Python库函数
heapq.nlargest(k,nums)[-1]
方法三：
调用堆模块的接口，小顶堆


我的解答：
class Solution(object):
    def findKthLargest(self, nums, k):
        """
        :type nums: List[int]
        :type k: int
        :rtype: int
        """
        # ----------1------------
        # n=sorted(list(nums),reverse=True)
        # return n[k-1]
        # -----------2---------
        # return heapq.nlargest(k, nums)[-1]
        # -----------3-----------
        L=nums[0:k]
        heapq.heapify(L)
        for i in range(k,len(nums)):
            heapq.heappushpop(L,nums[i])   
        return L[0]    